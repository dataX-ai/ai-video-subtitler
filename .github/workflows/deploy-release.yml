name: Deploy Release to Azure VM

# Add permissions block at workflow level
permissions:
  id-token: write
  contents: read

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_FEDERATED_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_FEDERATED_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          
      - name: Deploy to Azure VM
        uses: azure/CLI@v2
        env:
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
          VM_NAME: ${{ secrets.VM_NAME }}
          STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}
          STORAGE_CONTAINER_NAME: ${{ secrets.STORAGE_CONTAINER_NAME }}
          STORAGE_BLOB_NAME: ${{ secrets.STORAGE_BLOB_NAME }}
          AZURE_KEY_VAULT_NAME: ${{ secrets.AZURE_KEY_VAULT_NAME }}
          # AZURE_CORE_OUTPUT: none
        with:
          inlineScript: |
            echo "Starting deployment to Azure VM..."
            
            # Run the command and capture the output
            output=$(az vm run-command invoke \
              --resource-group "$RESOURCE_GROUP" \
              --name "$VM_NAME" \
              --command-id RunShellScript \
              --output json \
              --scripts '
              
                
                # Search for deploy-app.sh in various locations
                echo "Searching for deploy-app.sh in various locations..."
                find / -name deploy-app.sh -type f 2>/dev/null || echo "No deploy-app.sh found in filesystem"
                
                DEPLOY_SCRIPT="/home/azureuser/deploy-app.sh"
                
                if [ -f "$DEPLOY_SCRIPT" ]; then
                  echo "Found deploy script at $DEPLOY_SCRIPT"
                  chmod +x "$DEPLOY_SCRIPT"
                  
                  # Run the deployment script with full path
                  $DEPLOY_SCRIPT \
                    --repo "${{ github.repository }}" \
                    --version "${{ github.ref_name }}" \
                    --storage-account "${{ env.STORAGE_ACCOUNT_NAME }}" \
                    --container-name "${{ env.STORAGE_CONTAINER_NAME }}" \
                    --blob-name "${{ env.STORAGE_BLOB_NAME }}" \
                    --key-vault-name "${{ env.AZURE_KEY_VAULT_NAME }}"
                  
                  # Check the exit code of the deployment script
                  if [ $? -ne 0 ]; then
                    echo "Deployment script failed"
                    exit 1
                  fi
                else
                  exit 1
                fi
              ')
            
            # Display the output
            echo "$output"
            
            # Check if there's an error message in the output
            if echo "$output" | grep -q "Error\|failed\|not found"; then
              echo "Deployment failed. Check the output above for details."
              exit 1
            fi
            
            echo "Deployment completed successfully."